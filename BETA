//  .o88b.  .d88b.  d8888b. d88888b d8888b.   d8888b. db    db 
// d8P  Y8 .8P  Y8. 88  `8D 88'     88  `8D   88  `8D `8b  d8' 
// 8P      88    88 88   88 88ooooo 88   88   88oooY'  `8bd8'  
// 8b      88    88 88   88 88~~~~~ 88   88   88~~~b.    88    
// Y8b  d8 `8b  d8' 88  .8D 88.     88  .8D   88   8D    88    
//  `Y88P'  `Y88P'  Y8888D' Y88888P Y8888D'   Y8888P'    YP    
                                                            
                                                            
// d888888b d88888b  .d8b.  .88b  d88. 
// `~~88~~' 88'     d8' `8b 88'YbdP`88 
//    88    88ooooo 88ooo88 88  88  88 
//    88    88~~~~~ 88~~~88 88  88  88 
//    88    88.     88   88 88  88  88 
//    YP    Y88888P YP   YP YP  YP  YP 
                                    
                                    
// db    db  .d88b.  db   dD .d8888. d88888b 
// `8b  d8' .8P  Y8. 88 ,8P' 88'  YP 88'     
//  `8bd8'  88    88 88,8P   `8bo.   88ooooo 
//    88    88    88 88`8b     `Y8b. 88~~~~~ 
//    88    `8b  d8' 88 `88. db   8D 88.     
//    YP     `Y88P'  YP   YD `8888Y' Y88888P 

#include <conio.h>
#include <stdio.h>
#include <windows.h>
#include <stdlib.h>
#include <iostream>
#include <fstream>
#include <time.h>


#define ARRIBA 72
#define IZQUIERDA 75
#define DERECHA 77
#define ABAJO 80
#define ESC 27
#define F7 7

using namespace std;

	long int score = 0;
	int seguir_contando = 1;
	int newscore = 0;
	long int record;
	long int coins1;
	long int coins2;
	long int coins3;
	int playing = 0;
	int more_ast1 = 0;
	bool game_over = false;
	int np = 0;
	int skin1=1;
	int skin2;
	int skin3;
	int precioskin2=200;
	int precioskin3=500;
		
		int x1;
		int x2;
		int x3;
		int x4;
		int x5;
		int y1;
		int y2;
		int y3;
		int y4;
		int y5;


void set_console(){
	
	HWND console = GetConsoleWindow();
    RECT r;
    GetWindowRect(console, &r); //stores the console's current dimensions

    MoveWindow(console, r.left, r.top, 145, 300, TRUE); // 800 width, 100 height
	
}




void gotoxy(int x, int y){
	
	HANDLE hCon;
	hCon = GetStdHandle(STD_OUTPUT_HANDLE);
	COORD dwPos;
	dwPos.X = x;
	dwPos.Y = y;
	
	SetConsoleCursorPosition(hCon, dwPos);

	
}

void OcultarCursor(){
	
	HANDLE hCon;
	hCon = GetStdHandle(STD_OUTPUT_HANDLE);
	CONSOLE_CURSOR_INFO cci;
	cci.dwSize = 1;
	cci.bVisible = FALSE;
	
	SetConsoleCursorInfo(hCon,&cci);		
	
}

class NAVE{
	
	int x,y;
	int vidas;
	int corazones;


public:
	
	int VID(){ return vidas; }
	int CORa(){ return corazones; }
	int X(){ return x; }
	int Y(){ return y; }
	NAVE(int _x, int _y, int _corazones, int _vidas);
	void pintar();
	void borrar();
	void mover();
	void pintar_corazones();
	void morir();
	void COR(){ vidas--, corazones--;}
	
	
};
	
	NAVE::NAVE(int _x, int _y, int _corazones, int _vidas){
		
		
		y = _y;
		x = _x;
		corazones = _corazones;
		vidas = _vidas;
		
	}



void NAVE::pintar(){
	
	if(skin1 == 1 ){ //DEFAULT
	gotoxy(x,y); printf("  %c", 193);
	gotoxy(x,y+1); printf(" %c%c%c", 176, 219, 176);
	gotoxy(x,y+2); printf("%c%c%c%c%c",176,219,219,219,176);
}	
	if(skin2 == 2){ //SKIN1
		
		gotoxy(x,y); printf("  %c", 202);
		gotoxy(x,y+1); printf(" %c%c%c", 177, 254, 177);
		gotoxy(x,y+2); printf("%c%c%c%c%c",177,254,254,254,177);
		
}
	
	
}

void NAVE::borrar(){
	
	gotoxy(x,y); printf("        ");
	gotoxy(x,y+1); printf("        ");
	gotoxy(x,y+2); printf("        ");
	
}

void NAVE::mover(){
	
	if(kbhit()){
			
			
			char tecla = getch();
			borrar();
			if(tecla == IZQUIERDA && x>3 || tecla == 'a' && x>3) x-=2;
			if(tecla == DERECHA && x+6 < 75 || tecla == 'd' && x+6 < 75) x+=2;
			if(tecla == ARRIBA && y>4 || tecla == 'w' && y>4) y--;
			if(tecla == ABAJO && y+3 < 33 || tecla == 's' && y+3 < 33) y++;
			pintar();
			pintar_corazones();
		}
	
}

void limites(){
	
	for(int i = 2 ; i <78 ; i++){
	
		gotoxy(i, 3); printf("%c", 205);
		gotoxy(i,33); printf("%c", 205);
	
	}
	
for(int i = 4 ; i < 33 ; i++){
	
		gotoxy(2,i); printf("%c", 186);
		gotoxy(77,i); printf("%c", 186);
	
	}
	
	gotoxy(2, 3); printf("%c", 201);
	gotoxy(2,33); printf("%c",200);
	gotoxy(77,3); printf("%c",187);
	gotoxy(77,33); printf("%c",188);
	
}

void NAVE::pintar_corazones(){
	
	gotoxy(58,2); printf("HEARTHS ->");
	gotoxy(70,2); printf("     ");
	for( int i = 0 ; i < corazones ; i++){
		
		gotoxy(70+i,2); printf("%c",64);
		
	}

}
	
void NAVE::morir(){
		
	if(corazones == 0){
		
		borrar();
		gotoxy(x,y); printf("   *   ");
		gotoxy(x,y+1); printf("  **  ");
		gotoxy(x,y+2); printf("   *");
		Sleep(200);
		
		borrar();
		gotoxy(x,y); printf("   **   ");
		gotoxy(x,y+1); printf("  ****  ");
		gotoxy(x,y+2); printf("   **");
		Sleep(200);
		
		borrar();
		gotoxy(x,y); printf("  * ** *  ");
		gotoxy(x,y+1); printf("  ****  ");
		gotoxy(x,y+2); printf("  * ** *");
		Sleep(200);
		
		borrar();
		
		gotoxy(x,y); printf(" * ** *");
		gotoxy(x,y+1); printf("  ***** ");
		gotoxy(x,y+2); printf(" * ** *");
		Sleep(200);
		
		borrar();
		vidas--;
		if(vidas > 1){
	
		corazones = 3;
		
		}
		
		if(vidas == 1){
			
			game_over = true;
			
		}
		pintar_corazones();
		pintar();
		Sleep(150);
		borrar();
		Sleep(150);
		pintar();
		Sleep(150);
		borrar();
		Sleep(150);
		pintar();
		Sleep(150);
		borrar();
		Sleep(150);
		pintar();
		
				
	}
	
}

class AST{
	
	int x,y;
	
public:
	
	AST(int _y, int _x);
	void pintar();
	void mover();
	void choque(struct NAVE &N);
	
	
};

AST::AST (int _y, int _x){
	
	x = _x;
	y = _y;
	
}

void AST::pintar(){
	
	gotoxy(x,y); printf("%c",184);
	
}

void AST::mover(){
	
	gotoxy(x,y); printf(" ");
	y++;
	
	gotoxy(7,2); printf("SCORE -> %d",score);

	
	if(y > 32){
		
		
	
	x = rand()%71 + 4;
		y = 4;
		
	}
	
	if(y == 31 && seguir_contando == 1) score++;
	
	pintar();
	
}

void AST::choque(struct NAVE &N){
	
	if( x >= N.X() && x < N.X()+6 && y >= N.Y() && y <= N.Y()+2 ){
		
		srand (time(NULL));
		N.COR();
		N.borrar();
		N.pintar();
		N.pintar_corazones();
		x = rand()%71 + 4;
		y = 4;
				
	}
	
}

void saveSCORE(){
	ifstream leerRecord;
	leerRecord.open("record.txt");
	if(leerRecord.fail()){
		ofstream creardoc;
		creardoc.open("record.txt");
		creardoc << " ";
		creardoc.close();
	}
	leerRecord>> record;
	leerRecord.close();
	if(score > record){
		newscore = 1;
		record = score;
		ofstream guardarRecord;
		guardarRecord.open("record.txt");
		guardarRecord << score;
		guardarRecord.close();
	}
}

void saveCOINS(){
	ifstream leercoins;
	leercoins.open("coins.txt");
	if (leercoins.fail()){
		ofstream creardoc2;
		creardoc2.open("coins.txt");
		creardoc2 << " ";
		creardoc2.close();
	}
	leercoins >> coins1;
	leercoins.close();
	coins1 = coins1 + coins2;
	ofstream guardarcoins;
	guardarcoins.open("coins.txt");
	guardarcoins << coins1;
	guardarcoins.close();
}

void leerSKINS(){
	ifstream leerskins;
	leerskins.open("skins.txt");
	if (leerskins.fail()){
		ofstream crearskins;
		crearskins.open("skins.txt");
		crearskins << "0" <<"\n" << "0";
		crearskins.close();
	}
	leerskins >> skin2 >> skin3;
	leerskins.close();
}
void guardarSKINS(){
	ofstream guardarskins;
	guardarskins.open("skins.txt");
	guardarskins << skin2 <<"\n"<< skin3;
	guardarskins.close();
}

void comprarskin2(){
	leerSKINS();
	if(skin2==0){
		if (coins3 < precioskin2){
			cout << "NO TIENES DINERO POBRETON";
		}
		else{
			coins2= -precioskin2;
			saveCOINS();
			skin2=1;
			guardarSKINS();
		}
	}
}
void comprarskin3(){
	leerSKINS();
	if(skin3==0){
		if (coins3 < precioskin3){
			cout << "NO TIENES DINERO POBRETON";
		}
		else{
			coins2= -precioskin3;
			saveCOINS();
			skin3=1;
			guardarSKINS();
		}
	}
}


bool AjustarVentana(int Ancho, int Alto) {
	_COORD Coordenada;
	Coordenada.X = Ancho;
	Coordenada.Y = Alto;

	_SMALL_RECT Rect;
	Rect.Top = 0;
	Rect.Left = 0;
	Rect.Right = Ancho - 1;
	Rect.Bottom = Alto - 1;

	// Obtener el handle de la consola
	HANDLE hConsola = GetStdHandle(STD_OUTPUT_HANDLE);

	// Ajustar el buffer al nuevo tamaño
	SetConsoleScreenBufferSize(hConsola, Coordenada);

	// Cambiar tamaño de consola a lo especificado en el buffer
	SetConsoleWindowInfo(hConsola, TRUE, &Rect);
	return TRUE;

}

void show_coins(){
	
	ifstream leercoins;
	leercoins.open("coins.txt");
	leercoins >> coins3;
	leercoins.close();
	
}

void gameovercolors(){
	
system("CLS");
gotoxy(35,15); printf("GAME OVER!!");
system("COLOR A0");
Sleep(100);
system("COLOR C7");
Sleep(100);
system("COLOR E5");
Sleep(100);
system("COLOR F0");
Sleep(100);
system("COLOR B4");
Sleep(100);
system("COLOR D7");
Sleep(100);

	
	
}



int main(){
	
	menu:
	
	AjustarVentana(80,35);
	
	inicio:
	
	int teclaE;
	int empezar = 0;
	int teclA;
	int teclB;
	int teclC;
	
	system("CLS");
	system("COLOR 07");
		
	int x;
	int y;
	limites();
	OcultarCursor();
	show_coins();
	
	gotoxy(35,10); printf("1. PLAY");
	gotoxy(20,12); printf("2. SHOP (Not added in the current version)");
	gotoxy(18,14); printf("3. INVENTORY (Not added in the current version)");
	gotoxy(35,16); printf("4. EXIT");
	gotoxy(55,4); printf("Coins -> %d",coins3);
	gotoxy(26,30); printf("Press the number to do it.");
	gotoxy(1,1); printf("Meteor Chaos [Retro] - 1.0                     www.yokse.com to check updates!");
	opcion:
	teclA = getch();
	if(teclA == '1'){
		
		system("CLS");
		goto juego;
		
	}
	
	if(teclA == '4') return 0;
						

	if(teclA != 1,2,3,4) goto opcion;


		
		juego:
		
		int VID = 3;
		int CORa = 3;
		game_over = false;
		seguir_contando = 1;
				
		limites();
		NAVE N(35,30,3,3);
		N.pintar_corazones();
		N.pintar();	
		gotoxy(28,10); printf("Press any key to play!");
		gotoxy(26,12); printf("Use WASD or arrows to move!");
		if(teclaE != F7) empezar = 1;
		teclaE = getch();  
		gotoxy(23,10); printf("                                      ");
		gotoxy(26,12); printf("                                        ");
		Sleep(500);
		gotoxy(40,10); printf("3");
		Sleep(1000);
		gotoxy(40,10); printf("2");
		Sleep(1000);
		gotoxy(40,10); printf("1");
		Sleep(1000);
		gotoxy(40,10); printf("GO!");
		Sleep(300);
		gotoxy(40,10); printf("       ");
		


	
	AST ast1(10,4); AST ast2(5,8); AST ast3(17,3); AST ast4(24,12); 
	if(more_ast1 == 1) AST ast5(x5,y5); 
	

	
	while(!game_over){
		

		ast1.mover(); ast2.mover(); ast3.mover(); ast4.mover();
		ast1.choque(N); ast2.choque(N); ast3.choque(N); ast4.choque(N);
		N.morir();
		N.mover();


		
		if(N.CORa() == 0){
			
			game_over = true;
			seguir_contando = 0;
			goto gameover;
			
		} 
		
		Sleep(30);
		
	}

gameover:

	
gameovercolors();


c_gameover:
		
system("CLS");
system ("COLOR C7");
limites();
gotoxy(22, 12); printf("IF YOU WANT TO CONTINUE PLAYING PRESS R.");
gotoxy(20, 14); printf("IF YOU WANT TO RETURN TO THE MENU PRESS ESC.");
gotoxy(13, 30); printf("Thanks for playing, this game has been coded by team Yokse!");
saveSCORE();
if(newscore == 0){
gotoxy(35,19); printf("SCORE -> %d",score);
gotoxy(34,21); printf("RECORD -> %d",record);
}

if(newscore == 1){
	
	gotoxy(30,20); printf("NEW RECORD! -> %d",score);
	
}
coins2 = (score*0.01);
gotoxy(32,25); printf("COINS EARNED -> %d",coins2);
saveCOINS();
gotoxy(32,26); printf("TOTAL COINS -> %d", coins1);

fin:

char teclaR = getch();

if(teclaR == 'r'){
	
	system("CLS");
	system("COLOR 0F");
	np++;
	score = 0;
	newscore = 0;
	goto juego;	
	
} 


if(teclaR == ESC){
 
 
 system("CLS");
 system("COLOR 0F");
 goto inicio;

 
}

if(teclaR != F7) goto fin;
	
	
}
